# -*- coding: utf-8 -*-
"""Opening_img_file_in_notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PAL03pjxkB7BzTbPbAN1CVHItGQRrJcb
"""

import numpy as np
import matplotlib.pyplot as plt

import cv2

img =  cv2.imread('00-puppy.jpg') # Unlike using Image.open() of PIL module and then converting to np.array. cv2 does in 1 step

type(img)

#img2 =  cv2.imread('wrong_file.jpg') # it will still run

#type(img) # but type will be NoneType

#img.shape

plt.imshow(img)
# Matplotlib --> RGB RED GREEN BLUE
# OpenCV --> BLUE GREEN RED
# so when we read the file in openCV we read it as
# BGR image,& matplot lib is displaying as a RGB

#Converting BGR img TO RGB img
fix_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

plt.imshow(fix_img)
plt.show()

# to create gray_scale image using cv2
img_gray = cv2.imread('00-puppy.jpg',cv2.IMREAD_GRAYSCALE)
img_gray.shape # only one layer

plt.imshow(img_gray,cmap = 'gray') # cmap = 'gray' this is needed or the img will be in viridis

# RESIZING
plt.imshow(fix_img)

fix_img.shape

new_img = cv2.resize(fix_img,(1000,400))
plt.imshow(new_img)

# Resizing using ratios
w_ratio = 0.5
h_ratio = 0.5
new2_img = cv2.resize(fix_img,(0,0), fix_img, w_ratio,h_ratio)
plt.imshow(new2_img)

new2_img.shape

flip_img = cv2.flip(fix_img, 1) # 0 ->upside down, 1 -> mirrored, -1 -> both
plt.imshow(flip_img)
plt.show()

# Save an image file
cv2.imwrite('new_puppy.jpg',flip_img)

# To increase or decrease the size of canvas in notebook
fig = plt.figure(figsize = (10,10))
ax = fig.add_subplot(111)
ax.imshow(fix_img)